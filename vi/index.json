[
{
	"uri": "/vi/1-awsarchitectureblog/",
	"title": "AWS Architecture Blog",
	"tags": [],
	"description": "",
	"content": "AWS Architecture Blog  Insights for CTOs: Part 3 – Phát triển kinh doanh với năng lực dữ liệu hiện đại Khởi chạy Microsoft Windows Server instances trên Amazon EC2 nhanh hơn tới 65% so với trước đây Dream11: Ngặn chặn các cuộc tấn công qui mô lớn ở lớp ứng dụng bằng AWS WAF  "
},
{
	"uri": "/vi/",
	"title": "AWS Vietnamese Blog",
	"tags": [],
	"description": "",
	"content": "AWS Vietnamese Blog AWS Architecture Blog "
},
{
	"uri": "/vi/1-awsarchitectureblog/1.1-blog-1/",
	"title": "Insights for CTOs: Part 3 – Phát triển kinh doanh với năng lực dữ liệu hiện đại",
	"tags": [],
	"description": "",
	"content": "Insights for CTOs: Part 3 – Phát triển kinh doanh với năng lực dữ liệu hiện đại Bài đăng này được viết cùng với với Jonathan Hwang, người đứng đầu Foundation Data Analytics tại Zendesk. Với vai trò là Senior Solutions Architect, tôi đã nói chuyện với các Chief technology officers (CTOs) và ban lãnh đạo điều hành của các doanh nghiệp lớn như các ngân hàng lớn, các doanh nghiệp software as a service (SaaS), các doanh nghiệp SMB và các công ty khởi nghiệp.\nQua 6 phần trong bài viết này, tôi sẽ chia sẻ những hiểu biết và kiến thức được tổng hợp từ nhiều Giám đốc Công nghệ và các nhà Lãnh đạo Kỹ thuật trong hành trình áp dụng công nghệ Điện toán đám mây. Dưới đây là những đúc kết về các cách áp dụng hay nhất về kiến trúc Điện toán đám mây được xây dựng trên kết quả thực hành của tôi để giúp bạn xây dựng và điều hành thành công các ứng dụng trên Cloud. Các cách áp dụng đa dạng khía cạnh bao gồm Xây dựng và vận hành ứng dụng, Bảo mật, Quản lý tài chính , Trí tuệ nhân tạo, các mô hình vận hành và chiến lược để dịch chuyển lên Cloud.\nTrong Phần 3, cùng với người đứng đầu Foundation Analytics tại Zendesk, Jonathan Hwang, chúng tôi chỉ ra cách Zendesk từng bước mở rộng dữ liệu và khả năng phân tích của họ để sử dụng hiệu quả nguồn dữ liệu và thông tin mà họ thu thập được từ những tương tác của khách hàng. Bạn có thể tìm hiểu cách Zendesk xây dựng một kiến trúc dữ liệu hiện đại bằng cách sử dụng dịch vụ Amazon Simple Storage Service (Amazon S3) để lưu trữ, Apache Hudi để xử lý dữ liệu phân cấp và AWS Lake Formation để kiểm soát truy cập chi tiết.\nTại sao Zendesk cần xây dựng và mở rộng quy mô nền tảng dữ liệu của họ Zendesk là một nền tảng dịch vụ khách hàng, nơi kết nối hơn 100.000 thương hiệu với hàng trăm triệu khách hàng qua điện thoại, trò chuyện, email, nhắn tin, các kênh xã hội, cộng đồng, trang web đánh giá và trung tâm trợ giúp. Họ thu thập và sử dụng dữ liệu từ các kênh này để đưa ra các quyết định cho chiến lược kinh doanh tốt nhất và tạo ra các sản phẩm mới và cải tiến các sản phẩm khác.\nVào năm 2014, đội ngũ chuyên về dữ liệu của Zendesk đã xây dựng phiên bản đầu tiên của nền tảng dữ liệu lớn (Big Data) trong trung tâm dữ liệu của riêng họ bằng cách sử dụng Apache Hadoop để áp dụng Máy học (Machine Learning). Cùng với đó, họ đã tung ra Answer Bot và Zendesk Benchmark report. Những sản phẩm này rất thành công đến nỗi chúng sớm sử dụng hết tài nguyên tính toán có sẵn trong trung tâm dữ liệu.\nVào cuối năm 2017, Zendesk nhận định rõ ràng nhu cầu cấp thiết của họ về việc hiện đại hóa dữ liệu và nhân rộng khả năng xử lý dữ liệu bằng cách dịch chuyển lên Đám mây (Cloud)\nNgày càng hiện đại hóa khả năng xử lý dữ liệu Zendesk đã xây dựng và mở rộng khối lượng công việc của họ để sử dụng các hồ chứa dữ liệu (data lakes) trên AWS, nhưng họ sớm gặp phải những thách thức về kiến trúc mới:\nQuy tắc \u0026ldquo;right to be forgotten\u0026rdquo; trong General Data Protection Regulation (GDPR) đã gây khó khăn và tốn kém cho việc duy trì các hồ chứa dữ liệu (data lakes), bởi vì việc xóa một phần dữ liệu nhỏ cần phải xử lý lại các bộ dữ liệu lớn. Gặp khó khăn trong việc quản lý về Bảo Mật và Quản trị hơn khi hồ chứa dữ liệu (data lakes) được mở rộng cho một lượng người dùng lớn hơn.\nCác phần sau đây cho bạn biết cách Zendesk đang giải quyết các quy tắc GDPR bằng cách phát triển từ các tệp Apache Parquet thuần trên Amazon S3 thành các Hudi dataset trên Amazon S3 để cho phép chèn / cập nhật / xóa ở mức độ dòng. Để giải quyết vấn đề bảo mật và quản trị, Zendesk đang chuyển sang AWS Lake Formation Bảo mật tập trung để kiểm soát truy cập chi tiết trên quy mô lớn.\nNền tảng dữ liệu của Zendesk Hình 1 mô phỏng nền tảng dữ liệu hiện tại của Zendesk. Nền tảng hiện tại bao gồm ba đường dẫn dữ liệu (data pipelines): “Data Hub,” “Data Lake,” and “Self Service.”\nData Lake pipelines\nData Lake và Data Hub pipelines bao gồm toàn bộ vòng đời của dữ liệu từ khi được thu thập đến khi được sử dụng.\nData Lake pipelines hợp nhất dữ liệu từ cơ sở dữ liệu có độ phân tán cao của Zendesk thành một hồ chứa dữ liệu (data lake) để phân tích.\nZendesk sử dụng Amazon Database Migration Service (AWS DMS) để thực hiện change data capture (CDC) từ hơn 1.800 Amazon Aurora MySQL databases trong 8 AWS Regions. Nó phát hiện các transaction bị thay đổi và cập nhật chúng vào hồ chứa dữ liệu (data lake) bằng cách sử dụng Amazon EMR và Hudi.\nZendesk ticket data bao gồm hơn 10 tỷ sự kiện và có quy mô lên đến petabyte dữ liệu. Các file trong hồ chứa dữ liệu (data lake) trong Amazon S3 được chuyển đổi và lưu trữ ở định dạng Apache Hudi và được đăng ký trên AWS Glue catalog và nó luôn sẵn sàng với tư cách là bảng dữ liệu để phục vụ cho truy vấn phân tích qua Amazon Athena.\nData Hub pipelines Các Data Hub pipelines tập trung vào các sự kiện ở thời gian thực và các trường hợp sử dụng phân tích dữ liệu streaming (streaming analytics ) với Apache Kafka. Bất kỳ ứng dụng nào tại Zendesk đều có thể đưa các sự kiện lên global Kafka message bus. Apache Flink nhập các sự kiện này vào Amazon S3.\nData Hub cung cấp dữ liệu doanh nghiệp chất lượng cao, có tính khả dụng và khả năng nhân rộng cao.\nSelf-managed pipeline Các đường dẫn dữ liệu tự quản lý cho phép các đội kỹ sư sản phẩm sử dụng hồ chứa dữ liệu (data lake) cho những trường hợp sử dụng không phù hợp với các mẫu tích hợp tiêu chuẩn. Tất cả các đội kỹ sư sản phẩm trong nội bộ của Zendesk có thể sử dụng các công cụ cơ bản như Amazon EMR, Amazon S3, Athena, và AWS Glue để xuất bản bộ dữ liệu phân tích của riêng họ và chia sẻ với các đội khác.\nMột ví dụ đáng chú ý về vấn đề này là từ nhóm kỹ sư phát hiện sự gian lận ( fraud detection ) của Zendesk. Họ xuất bản dữ liệu và phát hiện gian lận thông qua nền tảng hồ chứa dữ liệu tự quản lý của chúng tôi và sử dụng Amazon QuickSight để trực quan hóa. Bạn cần mô hình bảo mật và tuân thủ chi tiết\nCác hồ chứa dữ liệu có thể thúc đẩy tăng trưởng thông qua việc ra quyết định và đổi mới sản phẩm nhanh hơn. Tuy nhiên, chúng cũng có thể mang đến những thách thức mới về bảo mật và tuân thủ:\n Khả năng Hiển thị và Khả năng Kiểm tra. Ai có quyền truy cập vào dữ liệu nào? Mọi người có cấp độ truy cập nào và làm thế nào / khi nào và ai đang truy cập nó? Kiểm soát quyền truy cập cụ thể. Làm cách nào để bạn xác định và thực thi quyền truy cập đặc quyền ít nhất vào các tập con dữ liệu trên quy mô lớn mà không tạo ra tắc nghẽn hoặc sự phụ thuộc vào yếu tố con người /đội ngũ chủ chốt.  Lake Formation giúp giải quyết những khúc mắc này bằng cách kiểm tra quyền truy cập dữ liệu và cung cấp bảo mật cấp dòng và cột cũng như mô hình kiểm soát truy cập được ủy quyền để tạo ra các trình quản lý dữ liệu cho hệ thống Bảo Mật và Quản Trị của bạn\nZendesk đã sử dụng Lake Formation để xây dựng một mô hình kiểm soát truy cập chi tiết sử dụng Bảo mật cấp dòng. Nó phát hiện các loại dữ liệu và thông tin cá nhân (Personally Identifiable Information - PII) ngay cả khi mở rộng qui mô hồ chứa dữ liệu (data lake).\nMột số khách hàng của Zendesk từ chối đưa dữ liệu và thông tin của họ vào hệ thống Máy học (Machine Learning) hoặc trong các dự án khảo sát thị trường. Zendesk sử dụng Lake Formation để áp dụng bảo mật cấp hàng nhằm lọc ra các hồ sơ liên quan đến danh sách tài khoản khách hàng đã chọn không tham gia. Chúng cũng giúp người dùng dữ liệu có thể hiểu được bảng dữ liệu nào chứa PII bằng cách tự động phát hiện và gắn thẻ các cột trong danh mục dữ liệu bằng AWS Glue’s PII detection algorithm. Giá trị của việc xử lý các dữ liệu thời gian thực\nKhi bạn xử lý dữ liệu càng nhanh và sớm sau khi dữ liệu được tạo, quyết định sẽ được đưa ra nhanh hơn và chính xác hơn Các thiết kế mẫu trong phân tích dữ liệu streaming, được thực hiện bằng cách sử dụng các dịch vụ như Amazon Managed Streaming for Apache Kafka (Amazon MSK) hoặc Amazon Kinesis, tạo ra một enterprise eventbus để trao đổi dữ liệu giữa các ứng dụng không đồng nhất trong thời gian thực.\nVí dụ: người ta thường sử dụng tính năng streaming để tăng cường quá trình thu thập dữ liệu (data ingestion) từ CSDL truyền thống bằng phương pháp CDC vào data lake cùng với quá trình streaming ingestion bổ sung cho các application events. CDC là một mẫu thiết kế kiến trúc thu thập dữ liệu phổ biến, nhưng thông tin có thể ở mức quá chi tiết. Điều này yêu cầu bối cảnh ứng dụng phải được tái tạo lại trong data lake và business logic phải được sử giống giống nhau ở hai nơi, bên trong ứng dụng và trong lớp xử lý data lake. Điều này tạo ra nguy cơ trình bày sai ngữ nghĩa của ngữ cảnh ứng dụng.\nZendesk đã phải đối mặt với thách thức này khi thực hiện CDC data lake ingestion của họ từ các Aurora clusters. Họ đã tạo một event bus được xây dựng với Apache Kafka để tăng cường CDC của họ với các application domain events cấp cao hơn để trao đổi trực tiếp giữa các ứng dụng không đồng nhất.\nKiến trúc streaming của Zendesk CDC database ticket table schema đôi khi có thể chứa các thuộc tính phức tạp và không cần thiết dành riêng cho ứng dụng và không thể hiện được domain model của ticket. Điều này khiến cho downstream consumers không hiểu để sử dụng dữ liệu. Một ticket domain object có thể bao gồm một số database tables khi được modeled ở dạng third normal form, điều này làm cho việc truy vấn đối với các nhà phân tích trở nên khó khăn. Đây cũng là một phương pháp tích hợp dễ gây ra vấn đề vì các ứng dụng và dịch vụ sử dụng dữ liệu có thể dễ dàng bị ảnh hưởng khi logic của ứng dụng thay đổi, điều này khiến cho việc thiết lập một chế độ xem dữ liệu chung trở nên khó khăn.\nĐể hướng tới giao tiếp dựa trên sự kiện giữa các microservices, Zendesk đã tạo dự án Platform Data Architecture (PDA), sử dụng standard object model để thể hiện chế độ xem ngữ nghĩa, cấp cao hơn của dữ liệu ứng dụng của họ. Standard objects là các domain objects được thiết kế để giao tiếp giữa nhiều domain và không chịu ảnh hưởng bởi cơ chế CDC. Cuối cùng, Zendesk đặt mục tiêu chuyển đổi data architecture của họ từ một tập hợp các isolated products và data silos thành một nền tảng dữ liệu thống nhất gắn kết.\nHình 2. Một góc nhìn ứng dụng của kiến trúc streaming Zendesk.\nHình 2 cho thấy cách tất cả các sản phẩm và người dùng của Zendesk tích hợp thông qua các standard objects chung và các standard events trong Data Hub. Các ứng dụng publish và sử dụng ( consume ) standard objects và events đều đến từ event bus.\nVí dụ, một complete ticket standard object sẽ được xuất bản lên eventbus bất cứ khi nào nó được tạo, cập nhật hoặc thay đổi. Về mặt sử dụng ( consume ), các sự kiện này được nhóm sản phẩm sử dụng để kích hoạt các khả năng của nền tảng như tìm kiếm, xuất dữ liệu, phân tích và trang tổng quan báo cáo.\nTóm lược Khi hoạt động kinh doanh của Zendesk phát triển, data lake của họ đã phát triển từ các tệp Parquet đơn giản trên Amazon S3 thành data lake và có thể cập nhật tăng dần dựa trên kiến trúc Hudi hiện đại. Giờ đây, các chính sách bảo mật IAM của họ được sử dụng nhằm kiểm soát truy cập chi tiết thông qua Lake Formation.\nChúng tôi đã nhiều lần chứng kiến những cải tiến về mặt kiến trúc một cách từ từ đạt được thành công vì nó làm giảm rủi ro kinh doanh liên quan đến sự thay đổi và cung cấp đủ thời gian cho nhóm của bạn để tìm hiểu và đánh giá các hoạt động và các dịch vụ được quản lý trên Cloud.\nNếu bạn muốn tìm kiếm thêm nội dung về kiến trúc? AWS Architecture Center cung cấp các sơ đồ kiến trúc tham chiếu, các giải pháp kiến trúc đã được hiệu chỉnh, các phương pháp hay nhất Well-Architected, các mẫu, biểu tượng và hơn thế nữa!\nCác bài viết khác trong loạt bài này\n Insights for CTOs: Part 1 – Building and Operating Cloud Applications Insights for CTOs: Part 2 – Enable Good Decisions at Scale with Robust Security  "
},
{
	"uri": "/vi/1-awsarchitectureblog/1.2-blog-2/",
	"title": "Khởi chạy Microsoft Windows Server instances trên Amazon EC2 nhanh hơn tới 65% so với trước đây",
	"tags": [],
	"description": "",
	"content": "Khởi chạy Microsoft Windows Server instances trên Amazon EC2 nhanh hơn tới 65% so với trước đây  GIỚI THIỆU Khách hàng của AWS khi chạy Microsoft Windows Server instances phải đối mặt với việc thời gian chờ đợi lâu trong khi chờ cấp phép instances, vì Windows Server Operating System (OS) trải qua một quá trình khởi động kéo dài. Đối với các nhà phát triển và chuyên gia CNTT, điều này sẽ gây khó khăn cho việc deployment và đảm bảo SLAs của hệ thống dịch vụ (Service Level Agreements – viết tắt là SLAs). Khi cần sử dụng SLAs ở mức độ cao với khối lượng công việc quan trọng nhiều, các chuyên gia CNTT thường yêu cầu cung cấp tài nguyên nhanh hơn, đồng thời tránh vượt quá chi phí. Việc cung cấp tài nguyên nhanh hơn và đáng tin cậy hơn có thể đáp ứng các yêu cầu khắt khe về thời gian của các ứng dụng và dịch vụ quan trọng trong việc mở rộng quy mô hoặc phục hồi hệ thống.  AWS đã công bố chức năng mới đó là khởi tạo mày chủ Amazon Elastic Compute Cloud (Amazon EC2) chạy Microsoft Windows Server OS với tốc độ nhanh hơn 65% so với trước đây. Khách hàng có thể sử dụng chức năng này cho cả các stock AMIs (được quản lý bởi AWS) và custom Amazon Machine Images (AMIs). Đối với custom AMIs, thời gian khởi chạy giảm xuống còn khoảng 85 giây so với thông thường là 242 giây và đối với stock AMIs, thời gian khởi chạy đạt được khoảng 45 giây. Bằng cách khởi chạy Windows instances nhanh hơn, tính năng mới giúp cung cấp kịp thời instances trên quy mô lớn, SLAs sẽ được cải thiện trong việc hỗ trợ các yêu cầu triển khai tăng đột biến và phản hồi nhanh hơn trong việc đáp ứng các yêu cầu khôi phục dịch vụ hoặc các yêu cầu về chuyển đổi sang hệ thống chờ. ( fail-over)\nTrong bài đăng trên blog này, chúng tôi sẽ giới thiệu cho bạn một số trường hợp sử dụng cho chức năng khởi chạy nhanh hơn này và cung cấp quy trình chi tiết từng bước để kích hoạt nó trên AMIs của bạn thông qua bản điều khiển Amazon EC2 hoặc AWS Command Line Interface (CLI) hoặc Application Programming Interface (API).\n1.1 USE CASES\nViệc khởi chạy nhanh các custom Windows AMIs giúp đáp ứng yêu cầu đối với các trường hợp nhạy cảm về thời gian hoặc nhu cầu cao, nơi thời gian khởi chạy là yếu tố quan trọng để thành công. Các phần mềm custom Windows AMIs thường chạy, chẳng hạn như Microsoft SharePoint, Microsoft Dynamics CRM, Microsoft Active Directory hoặc một ứng dụng NET-based custom được triển khai trên Windows Server hoặc trên Microsoft Internet Information Server (IIS). Sau đây là một số trường hợp sử dụng mà tinh năng khởi chạy nhanh hơn cho các AMI tuỳ chỉnh có thể được tận dụng.\n1.2 SCALABLE DEPLOYMENT\nViệc triển khai khối lượng công việc có thể mở rộng giúp đáp ứng nhu cầu tài nguyên luôn biến động và tối ưu hóa hiệu suất chi phí on-demand, sử dụng tối ưu tài nguyên. Một trong những trường hợp sử dụng là phục vụ những sự kiện cần thời gian triển khai nhanh , với qui mô lớn, chẳng hạn dịch chuyển ứng dụng với qui mô lớn, các sự kiện xã hội hoặc công ty, bầu cử của một quốc gia,….. Một trường hợp sử dụng khác là nó giúp chúng ta xử lý hàng loạt công việc như là để xử lý dữ liệu hàng ngày, hàng tuần hoặc xử lý hàng tháng đối với quá trình nhập, lọc và quản lý dữ liệu. Mở rộng kịp thời custom Windows AMI-based EC2 là rất quan trọng cho sự thành công của các sự kiện này. Tính năng khởi chạy nhanh hơn của Windows giúp mở rộng quy mô khi khởi chạy instance EC2 nhanh hơn.\n1.3 DISASTER RECOVERY (DR)\nKhách hàng có thể triển khai kế hoạch khôi phục sau thảm họa trong các cấu hình sao lưu và khôi phục, Pilot Light hoặc Warm Standby configurations. Khách hàng có thể triển khai khi sử dụng custom Windows AMIs với Microsoft stack of software, such as SharePoint, Dynamics CRM, etc. Với việc khởi chạy nhanh các instance EC2 tại trang DR là điều quan trọng để đáp ứng Recovery Time Objective (viết tắt là RTO). Tính năng khởi chạy nhanh hơn của Windows giúp đáp ứng yêu cầu RTO cho chiến lược triển khai.\n1.4 FAILOVER\nNhiều phần mềm của bên thứ 3 hoặc các giải pháp đối tác AWS sử dụng cơ chế phân cụm chủ động-thụ động để giải quyết yêu cầu chuyển lỗi. Khi (các) cá thể EC2 chủ động không khả dụng, (các) cá thể EC2 thụ động sẽ tiếp quản và trở nên hoạt động. Hầu hết các cấu hình này sử dụng Windows AMI tùy chỉnh chạy phần mềm Microsoft hoặc các giải pháp đối tác AWS sử dụng phần mềm của Microsoft. Khôi phục nhanh hơn (các) instance EC2 thụ động giúp dịch vụ tiếp tục hoạt động. Tính năng khởi chạy nhanh của Windows đẩy nhanh thời gian phục hồi trạng thái hoạt động của cluster dịch vụ.\n1.5. TÓM TẮT TÍNH NĂNG\nKhởi chạy Windows nhanh hơn khả dụng cho cả stock AMIs (AWS tối ưu hóa trước 20 hình ảnh phổ biến nhất do Amazon quản lý) và custom Windows AMIs.\n Đối với stock AMIs, nó có sẵn ngay từ đầu và đối với custom AMIs, cần phải có cấu hình tối ưu hóa image. Custom AMIs được định cấu hình để tối ưu hóa image bằng AWS Management Console, AWS CLI, API, hoặc Amazon EC2 Image Builder. Khi có ý định cấu hình custom AMIs để tối ưu hóa image , bạn cần chọn Enable Windows faster launching và cũng cần chỉ định anticipated image launch frequency. Anticipated image launch frequency được sử dụng để chỉ định số lượng instance EC2 mà bạn muốn khởi chạy trong một giờ. - Tần suất khởi chạy có thể được chọn từ tần suất xác định trước, chẳng hạn như low – 5 launches per hour hoặc cũng có thể được xác định dưới dạng custom value, chẳng hạn như 50 launches per hour. (Giới hạn lý thuyết cho tham số là 200.000, nhưng đối với tất cả các mục đích thực tế, lời khuyên là không nên thử tham số này). Pre-provisioned snapshots được cấp phép trước, chúng được sử dụng để làm giảm thời gian khởi chạy EC2 Windows Instance khi được tối ưu hóa sử dụng Windows AMIs. Amazon EC2 khởi chạy một instance sử dụng Windows AMIs để tạo pre-provisioned snapshots được cấp phép trước. Nó hoàn thành các bước như Sysprep specialize, Windows Out of Box Experience (OOBE) và khởi động lại theo yêu cầu. Cuối cùng, nó dừng instance và tạo snapshot, sau đó được sử dụng cho các lần khởi chạy tiếp theo, làm cho các lần khởi chạy nhanh hơn. Dựa trên cấu hình tần suất khởi chạy, các snapshot dự trữ sẽ tự động bổ sung khi được sử dụng hết. Bạn có thể tăng tần suất khởi chạy trước để giải quyết nhu cầu về số lượng instance tăng đột biến để xử lý bất kỳ sự kiện đặc biệt nào. Tần số khởi chạy có thể được đặt lại khi các yêu cầu trở lại bình thường.  1.6 KHỞI ĐỘNG TÍNH NĂNG\nVui lòng xem lại phần chuẩn bị trước khi bật tính năng này và vui lòng lưu ý rằng Windows AMIs phải được tạo bằng Sysprep với tùy chọn tắt máy để chọn tính năng khởi chạy nhanh hơn này trên AMIs.\n  Đối với các phác thảo demo trong bài đăng blog này, có hai Windows custom AMIs được tạo bằng cách sử dụng các instance Sysprep Windows EC2 (xem Hình 1).\nHình 1. EC2 Instances\n  Một AMIs bao gồm Microsoft Active Directory được cấu hình sẵn, trong khi AMIs kia bao gồm Microsoft SQL Server được cấu hình trước (xem Hình 2)\n  Hình 2. Custom AMIs\n Cả hai đều được cấu hình bằng ổ đĩa gốc mặc định.  Để sử dụng các AMIs này, các phần sau mô tả cách bật tính năng khởi chạy nhanh hơn của Windows bằng AWS Management Console and CLI.\nSỬ DỤNG AWS MANAGEMENT CONSOLE  Làm theo các bước sau để bật tính năng khởi chạy Windows nhanh hơn này trong AWS Management Console.\nMở bảng điều khiển Amazon EC2 tại EC2 Dashboard. Trong khung điều hướng, bên dưới Image, chọn AMIs (xem Hình 3).\nHình 3. EC2 Console AMI Menu Option\nChọn AMIs mà bạn muốn bật tính năng (xem Hình 4).\nHình 4. Select the Custom AMI\nTừ menu Actions, chọn Manage image optimization (xem Hình 5). Thao tác này sẽ mở ra trang Manage image optimizations , nơi bạn có thể định cấu hình cài đặt để khởi chạy nhanh hơn.\nHình 5. Image Optimization Option\nChọn Enable Windows faster launching.(xem Hình 6).\nHình 6. Windows Faster Launching Configuration\nTừ danh sách thả xuống Set anticipated launch frequency, hãy chọn một giá trị để chỉ định số lượng snapshot sẽ được tạo và duy trì để bao gồm khối lượng khởi chạy instance dự kiến của bạn. Đối với phần demo này , tôi đã chọn Low-5 launches per hour (xem Hình 7).\nHình 7. Image Launch Frequency Configuration\nChọn nút Save Changes để bật tính năng này khi bạn hoàn tất cấu hình. Khi bạn kích hoạt tính năng này, một số cấu hình và tự động hóa sẽ xảy ra ngầm mà bạn cần biết. Một số instance EC2 được khởi chạy theo cấu hình tần số khởi chạy. Các instance EC2 này được sử dụng để tạo snapshot cho việc khởi chạy nhanh. Các instance EC2 này tự động kết thúc khi các snapshot được tạo và sẵn sàng (xem Hình 8).\nHình 8. EC2 Instances Launched for Snapshots\nLaunch Template mặc định được tạo trong các Launch Template, được kiểm soát theo instance. Launch Templates chỉ định loại instance sẽ được khởi chạy.\nHình 9. Launch Template\nMột IAM role liên kết dịch vụ AWS Service RoleForEC2FastLaunch được tạo (xem Hình 10.). Tham khảo IAM role liên kết dịch vụ để tìm hiểu thêm.\nHình 10. Service Linked Role\nTrong Snapshots, bạn có thể xem các snapshot đã được tạo cho các images (xem Hình 11). Những snapshot này được sử dụng cho các lần khởi chạy tiếp theo.\nHình 11. The Snapshots\nKHÁM PHÁ TÍNH NĂNG THÔNG QUA AWS MANAGEMENT CONSOLE  Bỏ chọn hộp kiểm Enable Windows faster launching để dừng khởi chạy nhanh hơn đối với các instance Windows EC2 và để loại bỏ các snapshot được khởi tạo trước (xem Hình 6). Sau đó, AMI sẽ sử dụng quy trình khởi chạy tiêu chuẩn cho từng instance về sau.\nVui lòng tham khảo tài liệu Windows Fast Launch Config để biết thêm thông tin và tùy chọn. Trong phần này, chúng tôi đã trình bày các bước để định cấu hình tính năng khởi chạy nhanh hơn của Windows bằng Bảng điều khiển quản lý AWS. Trong phần tiếp theo, chúng tôi sẽ định cấu hình tính năng bằng AWS CLI.\n3.1 SỬ DỤNG AWS CLI\nSau đây là các bước để bật tính năng khởi chạy Windows nhanh hơn bằng AWS CLI. Hãy đảm bảo thực hiện sysprep instance Windows EC2 trước khi bật tính năng này.\nLưu ý: Hãy đảm bảo rằng bạn đang chạy instance CLI mới nhất (at least 2.4.15) để lệnh bật-khởi chạy nhanh hiển thị. Bạn cũng có thể sử dụng CloudShell từ bảng điều khiển để làm điều tương tự. Chạy lệnh AWS CLI sau để bật tính năng khởi chạy nhanh hơn của Windows cho AMI. Trong ví dụ này, ID của AMI là ami-07d3ee0bb1b8e8614 (xem Hình 12)\nPowerShell\naws ec2 enable-fast-launch\n\u0026ndash;image-id ami-07d3ee0bb1b8e8614 \u0026ndash;snapshot-configuration TargetResourceCount=10 \u0026ndash;resource-type snapshot\nHình 12. AWS CLI for Faster Launch\nVui lòng tham khảo tài liệu Enable-fast-launch và Disable-fast-launch để biết thêm chi tiết.\nDỰ KIẾN CHI PHÍ DỊCH VỤ    Không có phí dịch vụ bổ sung khi sử dụng chức năng khởi chạy nhanh hơn. Chỉ các tài nguyên AWS cơ bản đang chạy trong Tài khoản khách hàng như một phần của dịch vụ mới được tính vào chi phí sử dụng.\n  Để minh họa, chúng ta hãy xem xét kịch bản cho phép khởi chạy nhanh hơn với cài đặt tần suất mặc định là 5 lần khởi chạy mỗi giờ. Dịch vụ khởi chạy trước 5 instance T trong nền, sử dụng Windows Server OS thông qua các giai đoạn Sysprep trong quá trình khởi động. Bước này mất khoảng 15 phút (điều này thay đổi tùy thuộc vào mức độ quá tải của vùng / khu vực và AMI lớn như thế nào).\n  Thời gian chạy của mỗi instance T và volume EBS đính kèm được tính vào chi phí sử dụng. Tiếp theo, dịch vụ snapshot sẽ tương ứng với từng instance và lưu trữ chúng. Việc lưu trữ 5 snapshot image trong S3 được lập hóa đơn. Mỗi snapshot image sẽ được sử dụng hết khi một instance được khởi chạy nhanh từ AMI. Vì vậy, chi phí lưu trữ S3 phụ thuộc vào thời lượng lưu trữ snapshot trước khi được sử dụng để khởi chạy nhanh từ AMI.\n  Thông thường, chúng ta thấy rằng một snapshot image tồn tại trong khoảng 4-8 giờ trước khi được sử dụng. Khi tất cả 5 snapshot image được sử dụng, dịch vụ sẽ tự động bổ sung chúng trong nền bằng cách chạy các instance T và tiến hành tạo các snapshots . Nếu dịch vụ được sử dụng trong cả tháng, tổng chi phí cho mỗi AMI sẽ vào khoảng $ 5,00 - $ 6,00 mỗi tháng cho AMI dung lượng 50 GB với cài đặt mặc định là 5 lần khởi chạy mỗi giờ. Các tính toán chi phí được cung cấp ở đây chỉ là ước tính và chi phí thực tế có thể thay đổi dựa trên việc sử dụng và các yếu tố khác.\n  KẾT LUẬN  Trong bài đăng này, chúng tôi đã đề cập đến cách khách hàng có thể thiết lập những image cần thiết, nhạy cảm với thời gian - chẳng hạn như những image được sử dụng để mở rộng quy mô, khôi phục thảm họa hoặc chuyển hệ thống sang hệ thống chờ ( fail-over ) - để sẵn sàng khởi chạy nhanh với cấu hình tính năng đơn giản. Cấu hình được bật trong phần Quản lý AMI của Bảng điều khiển Amazon EC2 thông qua lệnh API / CLI hoặc trong Image Builder. Tìm hiểu thêm từ thông báo What’s New và documentation để khởi chạy các instance Windows nhanh hơn.\nAWS có thể giúp bạn đánh giá cách công ty của bạn có thể tận dụng tối đa các giá trị mà nền tảng điện toán đám mây mang lại. Tham gia cùng hàng triệu khách hàng AWS tin tưởng chúng tôi để di chuyển và hiện đại hóa các ứng dụng quan trọng nhất của họ trên đám mây. Để tìm hiểu thêm về cách hiện đại hóa Windows Server hoặc SQL Server, hãy truy cập Windows on AWS. Liên hệ với chúng tôi để bắt đầu hành trình di chuyển của bạn ngay hôm nay.\n"
},
{
	"uri": "/vi/1-awsarchitectureblog/1.3-blog-3/",
	"title": "Dream11: Ngặn chặn các cuộc tấn công qui mô lớn ở lớp ứng dụng bằng AWS WAF",
	"tags": [],
	"description": "",
	"content": "Dream11: Ngặn chặn các cuộc tấn công qui mô lớn ở lớp ứng dụng bằng AWS WAF Là nền tảng fantasy sports lớn nhất thế giới với hơn 120 triệu người dùng, Dream11 chạy đồng thời nhiều contests trong khi xử lý hàng triệu yêu cầu của người dùng mỗi phút. Dream11 lấy người dùng làm chính và dữ liệu quan trọng của họ làm ưu tiên nhằm đảm bảo rằng ứng dụng Dream11 sẽ luôn bảo vệ người dùng trước tất cả các mối đe dọa và lỗ hổng bảo mật.\n Giới thiệu về AWS WAF Security Automations  AWS WAF là một web application firewall giúp bảo vệ các ứng dụng và APIs khỏi các web exploits và bots phổ biến. Các cuộc tấn công này có thể ảnh hưởng đến tính khả dụng, xâm phạm bảo mật hoặc tiêu tốn quá nhiều tài nguyên của người dùng. AWS WAF cung cấp cho bạn quyền kiểm soát cách lưu lượng truy cập vào các ứng dụng của bạn. Bạn có thể tạo security rules nhằm kiểm soát lưu lượng truy cập của bot và chặn các mẫu tấn công phổ biến, chẳng hạn như SQL injection hoặc cross-site scripting (XSS).\nAWS WAF Security Automation sử dụng AWS CloudFormation để cấu hình nhanh các quy tắc AWS WAF giúp chặn các loại tấn công phổ biến sau:\nSQL injection Cross-site scripting HTTP floods Scanners and probes Known attacker origins (IP reputation lists) Bots and scrapers Trong bài đăng trên blog này, chúng tôi sẽ giải thích cách Dream11 sử dụng AWS WAF Security Automations để bảo vệ ứng dụng của bạn khỏi các cuộc tấn công từ scanners và probes attacks.\nScanner và probe automation  Để hiểu về scanner và probe automation, các bạn có thể xem một kịch bản tấn công thực tế đối với một ứng dụng cơ bản được AWS WAF bảo vệ. Giả sử rằng một kể tấn công đang cố gắng quét ứng dụng và xác định sơ hở bằng cách sử dụng công cụ tuỳ chỉnh của họ. Họ dự định tiến hành các cuộc tấn công injection (chẳng hạn như SQLi, XSS) hoặc các cuộc tấn công directory brute force.\nỨng dụng lúc này được bảo mật bởi AWS WAF, có các quy tắc để chặn các yêu cầu nếu phát hiện các signatures và patterns phù hợp. AWS WAF không có tất cả các payload để chặn tất cả các kiểu tấn công. Điều này có nghĩa là sau một số lần thử và gặp lỗi, kẻ tấn công có thể tìm thấy phần payload không bị AWS WAF chặn và cố gắng khai thác lỗ hổng.\nTrong trường hợp này, điều gì sẽ xảy ra nếu AWS WAF có thể phát hiện hành vi của các IP vi phạm và chặn nó trong một khoảng thời gian nhất định? Sẽ thật tuyệt nếu AWS WAF chặn IP của một kẻ tấn công sau khi nhận được một vài yêu cầu độc hại phải không? Bằng cách đó, các yêu cầu mới đến từ IP đó sẽ bị chặn mà AWS WAF không cần phải kiểm tra tất cả các quy tắc trong web ACL. Với mọi nỗ lực vượt qua thành công thì IP vi phạm cũng sẽ bị chặn ngay lập tức. Thay vì chặn IP vĩnh viễn, tính năng này chặn IP vi phạm trong một khoảng thời gian nhất định, không cho kẻ tấn công thực hiện thêm bất kỳ lần thử nào. Nó hoạt động như một bước đầu tiên của phản ứng khi xảy ra sự cố bảo mật. Đây là lúcitự động hóa sẽ giúp ích cho bạn.\nTính năng Scanner và probe automation giúp theo dõi Amazon CloudFront logs và phân tích mã trạng thái HTTP cho các yêu cầu đến từ các IP khác nhau. Dựa trên ngưỡng được cấu hình của HTTP status codes, scanner và probe automation sẽ cập nhật trực tiếp IP độc hại vào AWS WAF rule IPSet. Sau đó, nó sẽ chặn các yêu cầu tiếp theo từ IP đó trong một khoảng thời gian đã được định cấu hình.\nGiải pháp AWS WAF Security Automations tạo ra một AWS WAF rule, một AWS Lambda function và một truy vấn Scanner và Probes trên Amazon Athena. Câu truy vấn Athena sẽ phân tích vào Amazon CloudFront logs hoặc Application Load Balancer theo các khoảng thời gian đều đặn. Cứ mỗi phút, nó sẽ đếm số lượng yêu cầu bất thường từ các địa chỉ IP nguồn. Lambda function sẽ tiến hành cập nhật quy tắc AWS WAF IPSet để chặn thao tác scan từ các địa chỉ IP có tỷ lệ lỗi cao.\nScanner và probe solution\nHình 1. Kiến trúc giải pháp scanner and probe automation (xxx thể hiện số liệu được định nghĩa theo từng trường hợp sử dụng )\nQuy trình làm việc của giải pháp như sau, thể hiện trong Hình 1:\nCác CloudFront logs được đẩy vào Amazon S3 bucket. Log Parser Lambda sẽ chạy truy vấn Athena để tìm ngưỡng mã lỗi cho từng địa chỉ IP duy nhất. Nếu ngưỡng lỗi HTTP bị vượt qua đối với bất kỳ IP nào, thì Lambda function sẽ cập nhật IP vào trong AWS WAF IPSet trong một thời gian nhất định. IPSet tự động được bỏ chặn sau khi khoảng thời gian kết thúc.\nTùy chỉnh giải pháp AWS WAF Security Automation  Scanner và probe automation với các quy tắc sẽ block traffic nếu tỷ lệ lỗi cho một địa chỉ IP cụ thể vượt qua ngưỡng. Sau đó, nó thêm IP vào IPSet bị chặn. IP này bị chặn trong một khoảng thời gian và chúng ta có thể tuỳ chỉnh cấu hình cho chúng (ví dụ: 12 giờ, 2 ngày, 1 tuần).\nTrong quá trình thiết lập AWS WAF cho Dream11, có những trường hợp yêu cầu ngoại lệ đối với quy tắc trước đó. Một là để ngăn chặn các internal services, hai là gateway IPs khỏi bị chặn bởi security automation. Chúng ta cần tùy chỉnh các quy tắc cho các ngưỡng được xác định trước này. Ví dụ: Solution nên chặn lưu lượng truy cập bên ngoài, nhưng exclude bất kỳ internal IP addresses nào.\nNhóm bảo mật Dream11 đã tùy chỉnh logic Lambda nhằm để phê duyệt tất cả các địa chỉ IPs của internal NAT gateway. Scanner and probe automation bỏ qua các IP này ngay cả khi có nhiều lỗi từ các IP đã được phê duyệt. Mã mẫu như sau:\nlog.info(\u0026quot;[update_ip_set] \\tIgnore the approved IP \u0026ldquo;) if ip_type == \u0026ldquo;IPV4\u0026rdquo; and source_ip not in outstanding_requesters[\u0026lsquo;ApprovedIPs\u0026rsquo;]:\naddresses_v4.append(source_ip) elif ip_type == \u0026ldquo;IPV6\u0026rdquo; and source_ip not in outstanding_requesters[\u0026lsquo;ApprovedIPs\u0026rsquo;]: addresses_v6.append(source_ip) Lưu ý: Tạo tệp JSON với danh sách các IP được chấp thuận và lưu trữ trong APP_ACCESS_LOG_BUCKET Chúng tôi sẽ sử dụng cùng một S3 bucket để đặt các IP được phê duyệt dưới dạng tệp xyz.json, nơi chúng ta lưu trữ log truy cập CloudFront của mình. Điều này có thể định cấu hình trong file CloudFormation template dành cho Security Automation.\nGiải thích mã: Trước tiên, custom code xác thực IP cụ thể mà ngưỡng lỗi được vượt quá , ngoại trừ các IP đã được phê duyệt. Nếu IP thuộc định dạng IPV4 hoặc IPV6 và không phải là IP được phê duyệt, thì IP đó sẽ được thêm vào IPSet bị chặn trong một khoảng thời gian nhất định.\nViệc tùy chỉnh Lambda function sẽ cung cấp các giải pháp security automation mà điều đó sẽ không chặn bất kỳ request hợp lệ nào. Đồng thời, nó cung cấp khả năng bảo vệ chống lại các cuộc tấn công dạng scanner and probe. AWS WAF security automation là một giải pháp mã nguồn mở và được lưu trữ trên GitHub.\n4.Kết luận\nTrong bài đăng trên blog này, chúng tôi đã đưa ra một cái nhìn tổng quan ngắn gọn về cách bạn có thể giảm thiểu các cuộc tấn công bằng cách sử dụng AWS WAF security automation chống lại scanner and probe attacks. Chúng tôi cũng đã minh họa sự tùy chỉnh được thực hiện bởi nhóm bảo mật Dream11.\nBằng cách tự động hóa các hoạt động bảo mật của mình, bạn sẽ cải thiện khả năng ứng phó sự cố hiệu quả. Bạn có thể sắp xếp thứ tự ưu tiên cho các mối đe dọa và xử lý các cuộc tấn công mạng một cách tự động với các hành động tự động. Điều này làm giảm nhu cầu can thiệp, giảm thời gian của bạn và nó có thể giải quyết các vấn đề bảo mật mà không cần các bạn ngồi làm thủ công.\nSau khi triển khai điều này tại Dream11, chúng ta đã có thể tạo các tuỳ chỉnh dành riêng cho ứng dụng cụ thể của mình để chặn các kiểu tấn công. Điều này đã cung cấp tính khả dụng của ứng dụng, bảo mật tài nguyên và ngăn chặn việc tiêu thụ tài nguyên quá mức. Với giải pháp này, chúng tôi có thể cung cấp trải nghiệm fantasy sports tốt nhất cho hơn 120 triệu người dùng.\n"
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]